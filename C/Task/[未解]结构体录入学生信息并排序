/* 进度（报错） */
#include<stdio.h>
#define N 4
typedef struct student
{
    unsigned int id;
    char name[10];
    int score;
}STUDENT;
void SortSelect(STUDENT arr[], int n);
int main(void)
{
    int i;
    STUDENT stu[N];
    /* 输入信息 */
    for (i = 0; i < N; i++)
    {
        printf("输入第%d个学生的信息：学号、姓名、成绩\n", i);
        scanf("%d %s %d", &stu[i].id, stu[i].name, &stu[i].score);
    }
    /* 排序 */
    SortSelect(stu, N);
    /* 输出 */
    printf("排序后学生的信息为:\n");
    for (i = 0; i < N; i++)
    {
        printf("%d %s %d\n", stu[i].id, stu[i].name, stu[i].score);
    }
}
/* 函数功能：从大到小选择排序 */
void SortSelect(STUDENT arr[], int n)
{
    int i, j, temp, maxPos;
    for (i = 0; i < n-1; i++) // 控制躺数
    {
        maxPos = i; // 初始化最大值下标
        for (j = i+1; j < n; j++)   // 找到剩余元素里最大值下标
            if (arr[i].score < arr[j].score)
                maxPos = j;
        if (maxPos != i)    // 若此数不是最大值，交换
        {
            temp = arr[maxPos];
            arr[maxPos] = arr[i];
            arr[i] = temp;
        }
    }
}


/* 系统答案 */
#include <stdio.h>

#define N 4

struct Student1
{  	 	    	 
    unsigned int sno;
    char sname[16];
    int score;
}  	 	    	 ;

int main( )
{  	 	    	 
    struct Student1 stu[N];  //1
    int i, j;
    struct Student1 temp;


    for (i = 0; i < N; i++)  //1
    {  	 	    	 
        printf("输入第%d个学生的信息：学号、姓名、成绩\n", i + 1); //1
        scanf("%d %s %d", &stu[i].sno, stu[i].sname, &stu[i].score);//1
    }

    for (i = 0; i < N - 1; i++) //1
    {  	 	    	 
        for (j = 0; j < N - i - 1; j++)//1
        {  	 	    	 
            if (stu[j].score < stu[j + 1].score)//1
            {  	 	    	 
                temp = stu[j];
                stu[j] = stu[j + 1]; //1
                stu[j + 1] = temp;
            }
        }
    }

    printf("排序后学生的信息为:\n");
    for (i = 0; i < N; i++)  //1
    {  	 	    	 
        printf("%d %s %d\n", stu[i].sno, stu[i].sname, stu[i].score);//1
    }

    return 0;
}  	 	    	 
